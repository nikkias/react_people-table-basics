{"version":3,"sources":["pages/HomePage.tsx","PeopleContext.tsx","components/PersonLink/PersonLink.tsx","components/PeopleList/PeopleList.tsx","components/Loader/Loader.tsx","pages/PeoplePage.tsx","utils/classChange.ts","App.tsx","index.tsx"],"names":["HomePage","className","initialTabContext","people","findPersonFather","findPersonMother","isLoading","setIsLoading","setIsPageActive","error","PeopleContext","createContext","PersonLink","person","personSlug","useParams","useContext","cn","slug","href","sex","name","born","died","motherName","fatherName","PeopleList","map","Loader","PeoplePage","length","classChange","isActive","App","role","to","onClick","path","element","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.d00b0bef.chunk.js","sourcesContent":["export const HomePage = () => (\n  <h1 className=\"title\">Home Page</h1>\n);\n","import React, { createContext, useEffect, useState } from 'react';\nimport { getPeople } from './api';\nimport { Person } from './types';\n\ntype Context = {\n  people: Person[]\n  findPersonFather: (people: Person[], person: Person) => string | undefined\n  findPersonMother: (people: Person[], person: Person) => string | undefined\n  isLoading: boolean,\n  setIsLoading: React.Dispatch<React.SetStateAction<boolean>>\n  setIsPageActive: React.Dispatch<React.SetStateAction<boolean>>\n  error: string | null\n};\n\ntype Props = {\n  children: React.ReactNode\n};\n\nconst initialTabContext:Context = {\n  people: [],\n  findPersonFather: () => undefined,\n  findPersonMother: () => undefined,\n  isLoading: false,\n  setIsLoading: () => {},\n  setIsPageActive: () => {},\n  error: null,\n};\n\nconst findPersonFather = (people: Person[], person: Person) => {\n  const father = people.find(p => p.name === person.fatherName);\n\n  return father?.slug;\n};\n\nconst findPersonMother = (people: Person[], person: Person) => {\n  const mother = people.find(p => p.name === person.motherName);\n\n  return mother?.slug;\n};\n\nexport const PeopleContext = createContext<Context>(initialTabContext);\n\nexport const PeopleContent: React.FC<Props> = ({ children }) => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isPageActive, setIsPageActive] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n\n  useEffect(() => {\n    setIsLoading(true);\n    getPeople()\n      .then(usersFromServer => {\n        setPeople(usersFromServer);\n      })\n      .catch(() => {\n        setError('Something went wrong');\n      })\n      .finally(() => {\n        setIsLoading(false);\n      });\n  }, [isPageActive]);\n\n  return (\n    <PeopleContext.Provider value={{\n      people,\n      findPersonFather,\n      findPersonMother,\n      isLoading,\n      setIsLoading,\n      setIsPageActive,\n      error,\n    }}\n    >\n      {children}\n    </PeopleContext.Provider>\n  );\n};\n","import { useParams } from 'react-router-dom';\nimport cn from 'classnames';\nimport { useContext } from 'react';\nimport { Person } from '../../types';\nimport { PeopleContext } from '../../PeopleContext';\n\ntype Props = {\n  person: Person\n};\n\nexport const PersonLink: React.FC<Props> = ({ person }) => {\n  const { personSlug } = useParams();\n  const {\n    findPersonFather,\n    findPersonMother,\n    people,\n  } = useContext(PeopleContext);\n\n  return (\n    <tr\n      data-cy=\"person\"\n      className={cn('',\n        { 'has-background-warning': personSlug === person.slug })}\n    >\n      <td>\n        <a\n          href={`#/people/${person.slug}`}\n          className={cn('', { 'has-text-danger': person.sex === 'f' })}\n        >\n          {person.name}\n        </a>\n      </td>\n\n      <td>{person.sex}</td>\n      <td>{person.born}</td>\n      <td>{person.died}</td>\n      {findPersonMother(people, person)\n        ? (\n          <td>\n            <a\n              href={`#/people/${findPersonMother(people, person)}`}\n              className=\"has-text-danger\"\n            >\n              {person.motherName}\n            </a>\n          </td>\n        )\n        : <td>{person.motherName ? person.motherName : '-'}</td>}\n      {findPersonFather(people, person)\n        ? (\n          <td>\n            <a href={`#/people/${findPersonFather(people, person)}`}>\n              {person.fatherName}\n            </a>\n          </td>\n        )\n        : <td>{person.fatherName ? person.fatherName : '-'}</td>}\n    </tr>\n  );\n};\n","import { useContext } from 'react';\nimport { PeopleContext } from '../../PeopleContext';\nimport { PersonLink } from '../PersonLink/PersonLink';\n\nexport const PeopleList: React.FC = () => {\n  const { people } = useContext(PeopleContext);\n\n  return (\n    <tbody>\n      {people?.map(person => {\n        return (\n          <PersonLink person={person} key={person.slug} />\n        );\n      })}\n    </tbody>\n  );\n};\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { useContext } from 'react';\nimport { PeopleList } from '../components/PeopleList/PeopleList';\nimport { PeopleContext } from '../PeopleContext';\nimport { Loader } from '../components/Loader';\n\nexport const PeoplePage = () => {\n  const { isLoading, error, people } = useContext(PeopleContext);\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {error\n            && (\n              <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n                Something went wrong\n              </p>\n            )}\n          {!isLoading && people.length === 0 && (\n            <p data-cy=\"noPeopleMessage\">\n              There are no people on the server\n            </p>\n          )}\n          {isLoading && !error ? <Loader /> : (\n            <>\n              <table\n                data-cy=\"peopleTable\"\n                className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n              >\n                <thead>\n                  <tr>\n                    <th>Name</th>\n                    <th>Sex</th>\n                    <th>Born</th>\n                    <th>Died</th>\n                    <th>Mother</th>\n                    <th>Father</th>\n                  </tr>\n                </thead>\n\n                <PeopleList />\n              </table>\n            </>\n          )}\n        </div>\n      </div>\n    </>\n  );\n};\n","import cn from 'classnames';\n\ntype ClassChangeProps = {\n  isActive: boolean;\n};\n\nexport const classChange = ({ isActive }: ClassChangeProps) => cn(\n  'navbar-item', {\n    'has-background-grey-lighter': isActive,\n  },\n);\n","import {\n  Routes,\n  Route,\n  NavLink,\n  Navigate,\n} from 'react-router-dom';\n\nimport './App.scss';\nimport { useContext } from 'react';\nimport { HomePage } from './pages/HomePage';\nimport { PeoplePage } from './pages/PeoplePage';\nimport { classChange } from './utils/classChange';\nimport { PeopleContext } from './PeopleContext';\n\nexport const App = () => {\n  const { setIsPageActive } = useContext(PeopleContext);\n\n  return (\n    <div data-cy=\"app\">\n      <nav\n        data-cy=\"nav\"\n        className=\"navbar is-fixed-top has-shadow\"\n        role=\"navigation\"\n        aria-label=\"main navigation\"\n      >\n        <div className=\"container\">\n          <div className=\"navbar-brand\">\n            <NavLink\n              className={classChange}\n              to=\"/\"\n              onClick={() => setIsPageActive(false)}\n            >\n              Home\n            </NavLink>\n\n            <NavLink\n              className={classChange}\n              to=\"/people\"\n              onClick={() => setIsPageActive(true)}\n            >\n              People\n            </NavLink>\n          </div>\n        </div>\n      </nav>\n\n      <main className=\"section\">\n        <div className=\"container\">\n          <Routes>\n            <Route path=\"/\" element={<HomePage />} />\n            <Route path=\"/people\" element={<PeoplePage />}>\n              <Route path=\":personSlug?\" />\n            </Route>\n            <Route\n              path=\"*\"\n              element={<h1 className=\"title\">Page not found</h1>}\n            />\n            <Route path=\"home\" element={<Navigate to=\"/\" />} />\n          </Routes>\n        </div>\n      </main>\n    </div>\n  );\n};\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}